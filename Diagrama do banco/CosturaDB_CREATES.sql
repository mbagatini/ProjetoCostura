-- MySQL Script generated by MySQL Workbench
-- 08/27/17 18:15:47
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Table estado
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS estado (
  codigo INT NOT NULL,
  nome VARCHAR(45) NOT NULL,
  sigla VARCHAR(45) NOT NULL,
  PRIMARY KEY (codigo))
;


-- -----------------------------------------------------
-- Table cidade
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS cidade (
  codigo INT NOT NULL,
  nome VARCHAR(30) NOT NULL,
  cep VARCHAR(9) NOT NULL,
  estado INT NOT NULL,
  PRIMARY KEY (codigo),
  CONSTRAINT fk_cidades_estado1
    FOREIGN KEY (estado)
    REFERENCES estado (codigo))
;

CREATE INDEX fk_cidades_estado1_idx ON cidade (estado ASC);


-- -----------------------------------------------------
-- Table endereco
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS endereco (
  codigo INT NOT NULL,
  logradouro VARCHAR(200) NOT NULL,
  bairro VARCHAR(100) NOT NULL,
  cidade_codigo INT NOT NULL,
  PRIMARY KEY (codigo),
  CONSTRAINT fk_endereco_cidade1
    FOREIGN KEY (cidade_codigo)
    REFERENCES cidade (codigo))
;

CREATE INDEX fk_endereco_cidade1_idx ON endereco (cidade_codigo ASC);


-- -----------------------------------------------------
-- Table usuario
-- -----------------------------------------------------
CREATE SEQUENCE usuario_codigo_seq;
CREATE TABLE IF NOT EXISTS usuario (
  codigo INT NOT NULL DEFAULT nextval('usuario_codigo_seq'),
  nome VARCHAR(45) NOT NULL,
  email VARCHAR(45) NOT NULL,
  senha VARCHAR(20) NOT NULL,
  PRIMARY KEY (codigo))
;
ALTER SEQUENCE usuario_codigo_seq OWNED BY usuario.codigo;

CREATE UNIQUE INDEX usu_email_UNIQUE ON usuario (email ASC);


-- -----------------------------------------------------
-- Table categoria
-- -----------------------------------------------------
CREATE SEQUENCE categoria_codigo_seq;
CREATE TABLE IF NOT EXISTS categoria (
  codigo INT NOT NULL DEFAULT nextval('categoria_codigo_seq'),
  descricao VARCHAR(40) NOT NULL,
  PRIMARY KEY (codigo))
;
ALTER SEQUENCE categoria_codigo_seq OWNED BY categoria.codigo;


-- -----------------------------------------------------
-- Table tamanho
-- -----------------------------------------------------
CREATE SEQUENCE tamanho_codigo_seq;
CREATE TABLE IF NOT EXISTS tamanho (
  codigo INT NOT NULL DEFAULT nextval('tamanho_codigo_seq'),
  tamanho VARCHAR(5) NOT NULL,
  PRIMARY KEY (codigo))
;
ALTER SEQUENCE tamanho_codigo_seq OWNED BY tamanho.codigo;


-- -----------------------------------------------------
-- Table produto
-- -----------------------------------------------------
CREATE SEQUENCE produto_codigo_seq;
CREATE TABLE IF NOT EXISTS produto (
  codigo INT NOT NULL DEFAULT nextval('produto_codigo_seq'),
  referencia SMALLINT NOT NULL,
  descricao VARCHAR(100) NOT NULL,
  preco DECIMAL(11,2) NOT NULL,
  genero CHAR(2) NOT NULL,
  codigo_categoria INT NOT NULL,
  PRIMARY KEY (codigo),
  CONSTRAINT fk_produto_categoria1
    FOREIGN KEY (codigo_categoria)
    REFERENCES categoria (codigo))
;

CREATE INDEX fk_produto_categoria1_idx ON produto (codigo_categoria ASC);

ALTER SEQUENCE produto_codigo_seq OWNED BY produto.codigo;


-- -----------------------------------------------------
-- Table tamanho_produto
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tamanho_produto (
  codigo_produto INT NOT NULL,
  codigo_tamanho INT NOT NULL,
  PRIMARY KEY (codigo_produto, codigo_tamanho),
  CONSTRAINT fk_tamanho_has_produto_produto1
    FOREIGN KEY (codigo_produto)
    REFERENCES produto (codigo),
  CONSTRAINT fk_tamanho_produto_tamanho1
    FOREIGN KEY (codigo_tamanho)
    REFERENCES tamanho (codigo))
;

CREATE INDEX fk_tamanho_has_produto_produto1_idx ON tamanho_produto (codigo_produto ASC);

CREATE INDEX fk_tamanho_produto_tamanho1_idx ON tamanho_produto (codigo_tamanho ASC);